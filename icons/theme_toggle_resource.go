// auto-generated
// Code generated by '$ fyne bundle'. DO NOT EDIT.

package icons

import (
	"fmt"

	"fyne.io/fyne/v2"
)

var baseurl = "https://github.com/devalexandre/broker-ui/blob/master/icons/png/"

func getIcons(name string) string {
	return fmt.Sprintf("https://github.com/devalexandre/broker-ui/blob/master/icons/png/%s?raw=true", name)
}

// ThemeToggleIcon returns the appropriate theme toggle icon based on current theme
func ThemeToggleIcon(isDark bool) fyne.Resource {
	var iconPath string
	if isDark {
		iconPath = getIcons("light-mode.png") // Show light mode icon when in dark theme
	} else {
		iconPath = getIcons("dark-mode.png") // Show dark mode icon when in light theme
	}

	resource, err := fyne.LoadResourceFromURLString(iconPath)
	if err != nil {
		fmt.Printf("Error loading theme toggle icon: %v\n", err)
		return nil
	}
	return resource
}

// AddServerIcon returns the add server icon
func AddServerIcon() fyne.Resource {
	resource, err := fyne.LoadResourceFromURLString(getIcons("add-server.png"))
	if err != nil {
		fmt.Printf("Error loading add server icon: %v\n", err)
		return nil
	}
	return resource
}

// ExitIcon returns the exit icon
func ExitIcon() fyne.Resource {
	resource, err := fyne.LoadResourceFromURLString(getIcons("exit.png"))
	if err != nil {
		fmt.Printf("Error loading exit icon: %v\n", err)
		return nil
	}
	return resource
}

// PublisherIcon returns the publisher icon
func PublisherIcon() fyne.Resource {
	resource, err := fyne.LoadResourceFromURLString(getIcons("publisher.png"))
	if err != nil {
		fmt.Printf("Error loading publisher icon: %v\n", err)
		return nil
	}
	return resource
}

// SubscriberIcon returns the subscriber icon
func SubscriberIcon() fyne.Resource {
	resource, err := fyne.LoadResourceFromURLString(getIcons("subscriber.png"))
	if err != nil {
		fmt.Printf("Error loading subscriber icon: %v\n", err)
		return nil
	}
	return resource
}
